plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    flavorDimensions "primary"

    defaultConfig {
        applicationId "com.ankuradlakha.weather"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            manifestPlaceholders = [CRASHLYTICS_ENABLED: true]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    flavorDimensions "primary"
    productFlavors {
        dev {
            dimension "primary"
            buildConfigField 'String', 'REST_ENDPOINT', '"https://api.openweathermap.org/data/2.5/"'
            buildConfigField 'String', 'WEATHER_API_KEY', '"fae7190d7e6433ec3a45285ffcf55c86"'
            buildConfigField 'String', 'ICON_BASE_URL', '" https://openweathermap.org/img/wn/"'
        }
        prod {
            dimension "primary"
            buildConfigField 'String', 'REST_ENDPOINT', '"https://api.openweathermap.org/data/2.5/"'
            buildConfigField 'String', 'WEATHER_API_KEY', '"fae7190d7e6433ec3a45285ffcf55c86"'
            buildConfigField 'String', 'ICON_BASE_URL', '" https://openweathermap.org/img/wn/"'
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    /*hilt*/
    implementation "com.google.dagger:hilt-android:2.31.2-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.31.2-alpha"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    /*retrofit*/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    /*timber*/
    implementation 'com.jakewharton.timber:timber:4.7.1'
    /*GSON*/
    implementation 'com.google.code.gson:gson:2.8.6'
    /*okhttp*/
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    /*fragment*/
    implementation 'androidx.fragment:fragment-ktx:1.3.5'
    /*lifecycle*/
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    /*coroutines*/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    /*Room*/
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    /*Glide*/
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    /*Navigation*/
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    /*Maps*/
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    /*Lottie*/
    implementation 'com.airbnb.android:lottie:3.7.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}